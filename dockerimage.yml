name: Docker Image CI
env:
  DOCKER_USERNAME: ${{ github.nice}}
  DOCKER_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
  DOCKER_REPONAME:  "New-cap"

on:
  push:
    branches:
      - master
    paths:
      - 'Dockerfile'
      - 'app/**'
      - '.github/**'

jobs:
  check-dockerfile:
    name: Hadolint Dockerfile
    runs-on: macOS-latest
    timeout-minutes: 30
    steps:
      - name: Checkout git repo
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: 
        run: |
          


          if [ "$lintErrors" -gt "0" ]; then
              echo "Errors have been found, please see below"
              cat 
              exit 1
          else
              echo "There are no erros found on Dockerfile!!"
          fi
        
  docker-build-bcrypt:
    name: Docker build bcrypt
    needs: [check-dockerfile]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout git repo
      uses: actions/checkout@master
    - name: Build the Docker image
      run: |
        docker build . \
        --file Dockerfile \
        --tag $DOCKER_USERNAME/$DOCKER_REPONAME:${GITHUB_SHA::7}
    - name: Login to Dockerhub
      run: | 
        echo $DOCKER_PASSWORD | \
        docker login https://index.docker.io/v1/ \
        --username $DOCKER_USERNAME --password-stdin
    - name: Push the Docker image
      run: |
        docker push \
        $DOCKER_USERNAME/$DOCKER_REPONAME:${GITHUB_SHA::7}
 
   
  security-scan-New-cap:
    name: Scan 
    needs: [docker-build-bcrypt]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Set env vars
      run: |
          image_tag="$DOCKER_USERNAME/$DOCKER_REPONAME:${GITHUB_SHA::7}"
          echo "$image_tag"
          echo "::set-env name=IMAGE_TAG::$image_tag"
    - name: Scan New-cap for CVEs
      uses: docker://docker.io/aquasec/trivy:0.2.1
      with:
        args: --severity HIGH,CRITICAL ${{ env.IMAGE_TAG }}
    
